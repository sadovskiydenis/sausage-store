stages:
  - build
  - notify
  - test
#set_env:
#  stage: .pre
#  script:
#    echo "BUILD_JOB_VAR=$CI_JOB_ID" > build.env
#  artifacts:
#    reports:
#      dotenv: build.env
build-frontend-code-job:
#  stage: .pre
#  script:
#    echo "BUILD_JOB_VAR=$CI_JOB_ID" > build.env
#  artifacts:
#    reports:
#      dotenv: build.env
  stage: build  
  only:
    changes:
    - frontend/*
  script:        
    - cd frontend
    - npm install
    - npm run build
    - echo "{BUILD_JOB_VAR=$CI_JOB_ID}" >> build.env
#    - echo ${BUILD_JOB_VAR}
  artifacts:
    reports:
      dotenv: build.env
    name: "$CI_JOB_NAME"   
    paths:
    - frontend/dist/frontend
sonarqube-frontend-sast:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
#   variables:
  cache:
    key: "${CI_JOB_NAME}"
    paths:
    - .sonar/cache
  script:
    - cd frontend
    - sonar-scanner -X -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${SONAR_PROJECT_KEY_F} -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_LOGIN_F}
  needs:
  - build-frontend-code-job 
telegram-notification-frontend:
  variables:
    CI_JOB_NAME: build-frontend-code-job
    CHAT_ID: "-1002134018008"
    URL_TELEGRAM_BOT: "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  stage: notify
  only:
    changes:
    - frontend/*
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - echo ${BUILD_JOB_VAR}
#    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"$CHAT_ID\", \"text\": \"Садовский Денис собрал frontend. Ссылка на артефакт: $CI_PROJECT_URL/-/jobs/$BUILD_JOB_VAR/artifacts/download?job=$CI_JOB_NAME\"}" $URL_TELEGRAM_BOT '
  needs:
    - build-frontend-code-job
#    - project: std-024-40/sausage-store
#      ref: release-0.0.1
#      job: build-frontend-code-job
#      artifacts: true

